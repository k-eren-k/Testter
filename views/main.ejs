<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
<META name="Copyright" content="Bütün Hakları ES DEV Tarafıdan Saklıdır!">
<meta name="description" content="My Portfolio Web Site">
<meta name="keywords" content="eren erkoo portfolio modern web">
<meta http-equiv="content-language" content="tr">
<meta name="robots" content="index,nofollow">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859">
<style>
.snowflake {
  position: fixed;
  background: #fff; /* Snowflake color */
  border-radius: 50%;
  pointer-events: none;
  z-index: 1000;
  opacity: 0.8;
  animation: snowfall linear infinite;
}

@keyframes snowfall {
  0% {
    transform: translateY(0) rotate(0deg);
  }
  100% {
    transform: translateY(100vh) rotate(360deg);
  }
}

</style>


  <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v6.0.0-beta1/css/all.css" />
  <link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
  <link rel="stylesheet" href="/css/main.css" />
  <link rel="stylesheet" href="/css/bar.css" />
  <link rel="stylesheet" href="/css/about.css" />
  <link rel="stylesheet" href="/css/proje.css" />
  <link rel="icon" href="/img/favicon.png" type="image/x-icon" />


  <title>Eren</title>
  <link rel="stylesheet" href="/css/right-scroll.css" />
  <link rel="stylesheet" href="https://pro.fontawesome.com/releases/v6.0.0-beta1/css/all.css" />

</head>

<body>
  <div class="bar" id="bar"><%- include('pages/bar.ejs') %></div>

  <img alt="Picture of the author" fetchpriority="high" loading="eager" width="600" height="600" decoding="async"
    data-nimg="1" class="flex justify-center items-center select-none fixed z--10 opacity-100"
    style="color: transparent; max-width: 100%; height: auto" src="https://www.sametcc.me/blobanimation.svg" />

  <p id="dynamicText">This is a centered paragraph on top of the image.</p>
  <div class="text-container" id="textContainer">
    <span class="text-container-span">I'm a Web Developer from Turkey</span>
    <a id="translateButton" onclick="translateText()">
      <span class="material-symbols-outlined" id="translateIcon">translate</span>
    </a>
  </div>
  <style>
    .fade-in-out {
      transition: opacity 1s;
    }
  </style>


  <div class="button-container">
    <button><i class="fa-brands fa-discord"></i></button>
    <button><i class="fa-brands fa-github"></i></button>
    <button><i class="fa-solid fa-envelope"></i></button>
  </div>


  <div class="proje"><%- include('pages/proje.ejs') %></div>
  <div class="about"><%- include('pages/about.ejs') %></div>
  <script src="/js/hello.js"></script>
  <script src="/js/date.js"></script>
  <script src="/js/scroll.js"></script>
  <script src="/js/bar.js"></script>
  <script src="/js/web.js"></script>
  <script src="/js/right-scroll.js"></script>
  <script src="/js/translate.js"></script>
  <script src="/js/snow.js"></script>

  <script></script>
</body>
<div id="navigate-button" class="navigate-button">
  <i class="fa-light fa-chevron-up"></i>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
      const snowflakeContainer = document.getElementById('snowflake-container');
      const mouseArea = document.getElementById('mouse-area');

      function createSnowflake() {
        const snowflake = document.createElement('div');
        snowflake.className = 'snowflake';
        const size = Math.random() * 5 + 5; // Random size between 5 and 10 pixels
        snowflake.style.width = `${size}px`;
        snowflake.style.height = `${size}px`;
        snowflake.style.left = `${Math.random() * window.innerWidth}px`; // Random horizontal position
        snowflake.style.top = `-${Math.random() * window.innerHeight}px`; // Start above the viewport
        snowflake.style.animationDuration = `${Math.random() * 1 + 1}s`; // Faster falling speed

        snowflakeContainer.appendChild(snowflake);

        snowflake.addEventListener('animationiteration', () => {
          snowflake.remove(); // Remove the snowflake when it reaches the bottom
          createSnowflake(); // Create a new snowflake
        });
      }

      // Create initial snowflakes
      for (let i = 0; i < 20; i++) {
        createSnowflake();
      }

      // Update mouse area position
      document.addEventListener('mousemove', (event) => {
        const mouseX = event.clientX;
        const mouseY = event.clientY;

        mouseArea.style.left = `${mouseX - 25}px`; // Adjust for half of the width
        mouseArea.style.top = `${mouseY - 25}px`; // Adjust for half of the height
      });
    });
  </script>
</html>
